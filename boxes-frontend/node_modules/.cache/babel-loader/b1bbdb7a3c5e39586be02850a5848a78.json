{"ast":null,"code":"var _jsxFileName = \"/home/ash/Projects/boxes/boxes-frontend/src/components/ListArticles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListArticles = () => {\n  _s();\n\n  const [article, setArticle] = useState([]); // delete by id\n\n  async function deleteArticle(id) {\n    try {\n      await fetch(`http://localhost:5000/csvs/${id}`, {\n        method: 'DELETE'\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  } // get all csvs\n\n\n  async function getArticles() {\n    const res = await fetch('http://localhost:5000/csvs');\n    const articleArray = await res.json();\n    setArticle(articleArray);\n  }\n\n  useEffect(() => {\n    getArticles();\n  }, []);\n  return (\n    /*#__PURE__*/\n    //map the csvs and thier properties\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"CSV Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-striped w-100 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: article.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"pl-2\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                children: [\"//this is a route for getting static files from the server //folder 'csvs', referenced by the file name recieved via //mapping\", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: `http://localhost:5000/static/${item.filename}`,\n                  children: \"Download\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => // window is reloaded on click (can be refractored later)\n                deleteArticle(item._id) && window.location.reload(),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ListArticles, \"7xiwFe3dMRhueQLKjIZT5p69lwY=\");\n\n_c = ListArticles;\nexport default ListArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListArticles\");","map":{"version":3,"sources":["/home/ash/Projects/boxes/boxes-frontend/src/components/ListArticles.js"],"names":["React","Fragment","useState","useEffect","ListArticles","article","setArticle","deleteArticle","id","fetch","method","err","console","error","message","getArticles","res","articleArray","json","map","item","title","description","size","filename","_id","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC,CADyB,CAGzB;;AACA,iBAAeK,aAAf,CAA6BC,EAA7B,EAAiC;AAC/B,QAAI;AACF,YAAMC,KAAK,CAAE,8BAA6BD,EAAG,EAAlC,EAAqC;AAC9CE,QAAAA,MAAM,EAAE;AADsC,OAArC,CAAX;AAGD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;AACD;AACF,GAZwB,CAczB;;;AACA,iBAAeC,WAAf,GAA6B;AAC3B,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,4BAAD,CAAvB;AACA,UAAMQ,YAAY,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAA3B;AACAZ,IAAAA,UAAU,CAACW,YAAD,CAAV;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA;AAAA;AACE;AACA,YAAC,QAAD;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,0BAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA,oBACGV,OAAO,CAACc,GAAR,CAAaC,IAAD,iBACX;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,wBAAsBA,IAAI,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAA,0KAIE;AAAG,kBAAA,IAAI,EAAG,gCAA+BH,IAAI,CAACI,QAAS,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAcE;AAAA,qCACE;AACE,gBAAA,SAAS,EAAC,gBADZ;AAEE,gBAAA,OAAO,EAAE,MACP;AACAjB,gBAAAA,aAAa,CAACa,IAAI,CAACK,GAAN,CAAb,IAA2BC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA,aAASR,IAAI,CAACK,GAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA6CD,CArED;;GAAMrB,Y;;KAAAA,Y;AAuEN,eAAeA,YAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\n\nconst ListArticles = () => {\n  const [article, setArticle] = useState([]);\n\n  // delete by id\n  async function deleteArticle(id) {\n    try {\n      await fetch(`http://localhost:5000/csvs/${id}`, {\n        method: 'DELETE',\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  // get all csvs\n  async function getArticles() {\n    const res = await fetch('http://localhost:5000/csvs');\n    const articleArray = await res.json();\n    setArticle(articleArray);\n  }\n\n  useEffect(() => {\n    getArticles();\n  }, []);\n  return (\n    //map the csvs and thier properties\n    <Fragment>\n      <h2 className='text-center'>CSV Files</h2>\n      <table className='table-striped w-100 mt-5'>\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Size</th>\n          </tr>\n        </thead>\n        <tbody>\n          {article.map((item) => (\n            <tr key={item._id}>\n              <td className='pl-2'>{item.title}</td>\n              <td>{item.description}</td>\n              <td>{item.size}</td>\n              <td>\n                <button className='btn btn-success'>\n                  //this is a route for getting static files from the server\n                  //folder 'csvs', referenced by the file name recieved via\n                  //mapping\n                  <a href={`http://localhost:5000/static/${item.filename}`}>\n                    Download\n                  </a>\n                </button>\n              </td>\n              <td>\n                <button\n                  className='btn btn-danger'\n                  onClick={() =>\n                    // window is reloaded on click (can be refractored later)\n                    deleteArticle(item._id) && window.location.reload()\n                  }\n                >\n                  Delete\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nexport default ListArticles;\n"]},"metadata":{},"sourceType":"module"}